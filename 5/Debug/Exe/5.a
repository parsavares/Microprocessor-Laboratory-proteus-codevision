;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/28/2021
;Author  : Parsa vares
;Company :     SRBIAU
;Comments:      Task 5
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <alcd.h>
;#define   undefined 20
;#define   reset         200
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;unsigned char k=undefined,ragham=0,z=0,x=0,a=0;
;float pasokh=0,num1=0,num2=0;
;
;void disp(float c,unsigned char xx,unsigned char yy,unsigned char f);
;char keypad();
;char keypad()
; 0000 0028 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0029 PORTD.0=0;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002A         if(PIND.4==0)
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002B               {
; 0000 002C               k=7;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002D               ragham++;
;PCODE: $00000016 VOL: 0
; 0000 002E               while(PIND.4==0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002F               }
; 0000 0030         if(PIND.5==0)
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0031               {
; 0000 0032               k=8;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0033               ragham++;
;PCODE: $00000023 VOL: 0
; 0000 0034               while(PIND.5==0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0035               }
; 0000 0036         if(PIND.6==0)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0037               {
; 0000 0038               k=9;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0039               ragham++;
;PCODE: $00000030 VOL: 0
; 0000 003A               while(PIND.6==0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 003B               }
; 0000 003C         if(PIND.7==0)
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003D               {
; 0000 003E               // symbol /
; 0000 003F               k=15;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0040               while(PIND.7==0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0041               }
; 0000 0042 PORTD.0=1;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0043 PORTD.1=0;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0044         if(PIND.4==0)
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0045               {
; 0000 0046               k=4;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0047               ragham++;
;PCODE: $0000004D VOL: 0
; 0000 0048               while(PIND.4==0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0049               }
; 0000 004A         if(PIND.5==0)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 004B               {
; 0000 004C               k=5;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 004D               ragham++;
;PCODE: $0000005A VOL: 0
; 0000 004E               while(PIND.5==0);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 004F               }
; 0000 0050         if(PIND.6==0)
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0051               {
; 0000 0052               k=6;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0053               ragham++;
;PCODE: $00000067 VOL: 0
; 0000 0054               while(PIND.6==0);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0055               }
; 0000 0056         if(PIND.7==0)
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0057               {
; 0000 0058               // *
; 0000 0059               k=14;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 005A               while(PIND.7==0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 005B               }
; 0000 005C PORTD.1=1;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 005D PORTD.2=0;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 005E         if(PIND.4==0)
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 005F               {
; 0000 0060               k=1;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0061               ragham++;
;PCODE: $00000084 VOL: 0
; 0000 0062               while(PIND.4==0);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0063               }
; 0000 0064         if(PIND.5==0)
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0065               {
; 0000 0066               k=2;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0067               ragham++;
;PCODE: $00000091 VOL: 0
; 0000 0068               while(PIND.5==0);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0069               }
; 0000 006A         if(PIND.6==0)
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006B               {
; 0000 006C               k=3;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 006D               ragham++;
;PCODE: $0000009E VOL: 0
; 0000 006E               while(PIND.6==0);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 006F               }
; 0000 0070         if(PIND.7==0)
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0071               {
; 0000 0072               // symbol-
; 0000 0073               k=13;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0074               while(PIND.7==0);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0075               }
; 0000 0076 PORTD=0xff;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0077 PORTD.3=0;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0078         if(PIND.4==0)
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0079               {
; 0000 007A               lcd_clear();
;PCODE: $000000B9 VOL: 0
; 0000 007B               PORTD.3=1;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 007C               return k=reset;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 007D               while(PIND.4==0);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 007E               }
; 0000 007F         if(PIND.5==0)
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0080               {
; 0000 0081               k=0;
;PCODE: $000000C9 VOL: 0
; 0000 0082               ragham++;
;PCODE: $000000CA VOL: 0
; 0000 0083               while(PIND.5==0);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0084               }
; 0000 0085             if(PIND.6==0)
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0086               {
; 0000 0087               // symbol=
; 0000 0088               k=12;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0089               while(PIND.6==0);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 008A               }
; 0000 008B             if(PIND.7==0)
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 008C               {
; 0000 008D               // symbol+
; 0000 008E               k=11;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 008F               while(PIND.7==0);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0090               }
; 0000 0091 PORTD.3=1;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0092 return k;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0093 }
;PCODE: $000000EE VOL: 0
;void disp(float c,unsigned char xx,unsigned char yy,unsigned char f)
; 0000 0095 {
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0096 unsigned char lcdbuff[16];
; 0000 0097 lcd_gotoxy(xx,yy);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;	c -> Y+19
;	xx -> Y+18
;	yy -> Y+17
;	f -> Y+16
;	lcdbuff -> Y+0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0098 ftoa(c,f,lcdbuff);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0099 lcd_puts(lcdbuff);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 009A }
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;void main(void)
; 0000 009C {
;PCODE: $00000102 VOL: 0
; 0000 009D // Declare your local variables here
; 0000 009E 
; 0000 009F // Input/Output Ports initialization
; 0000 00A0 // Port A initialization
; 0000 00A1 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00A2 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00A3 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00A4 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00A5 
; 0000 00A6 // Port B initialization
; 0000 00A7 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00A8 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00A9 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00AA PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00AB 
; 0000 00AC // Port C initialization
; 0000 00AD // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00AE DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00AF // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00B0 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00B1 
; 0000 00B2 // Port D initialization
; 0000 00B3 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00B4 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00B5 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00B6 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00B7 
; 0000 00B8 // Timer/Counter 0 initialization
; 0000 00B9 // Clock source: System Clock
; 0000 00BA // Clock value: Timer 0 Stopped
; 0000 00BB // Mode: Normal top=0xFF
; 0000 00BC // OC0 output: Disconnected
; 0000 00BD TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00BE TCNT0=0x00;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00BF OCR0=0x00;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00C0 
; 0000 00C1 // Timer/Counter 1 initialization
; 0000 00C2 // Clock source: System Clock
; 0000 00C3 // Clock value: Timer1 Stopped
; 0000 00C4 // Mode: Normal top=0xFFFF
; 0000 00C5 // OC1A output: Disconnected
; 0000 00C6 // OC1B output: Disconnected
; 0000 00C7 // Noise Canceler: Off
; 0000 00C8 // Input Capture on Falling Edge
; 0000 00C9 // Timer1 Overflow Interrupt: Off
; 0000 00CA // Input Capture Interrupt: Off
; 0000 00CB // Compare A Match Interrupt: Off
; 0000 00CC // Compare B Match Interrupt: Off
; 0000 00CD TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00CE TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00CF TCNT1H=0x00;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00D0 TCNT1L=0x00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00D1 ICR1H=0x00;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00D2 ICR1L=0x00;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00D3 OCR1AH=0x00;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00D4 OCR1AL=0x00;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00D5 OCR1BH=0x00;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00D6 OCR1BL=0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00D7 
; 0000 00D8 // Timer/Counter 2 initialization
; 0000 00D9 // Clock source: System Clock
; 0000 00DA // Clock value: Timer2 Stopped
; 0000 00DB // Mode: Normal top=0xFF
; 0000 00DC // OC2 output: Disconnected
; 0000 00DD ASSR=0<<AS2;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00DE TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00DF TCNT2=0x00;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00E0 OCR2=0x00;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00E1 
; 0000 00E2 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00E3 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00E4 
; 0000 00E5 // External Interrupt(s) initialization
; 0000 00E6 // INT0: Off
; 0000 00E7 // INT1: Off
; 0000 00E8 // INT2: Off
; 0000 00E9 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00EA MCUCSR=(0<<ISC2);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00EB 
; 0000 00EC // USART initialization
; 0000 00ED // USART disabled
; 0000 00EE UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00EF 
; 0000 00F0 // Analog Comparator initialization
; 0000 00F1 // Analog Comparator: Off
; 0000 00F2 // The Analog Comparator's positive input is
; 0000 00F3 // connected to the AIN0 pin
; 0000 00F4 // The Analog Comparator's negative input is
; 0000 00F5 // connected to the AIN1 pin
; 0000 00F6 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00F7 SFIOR=(0<<ACME);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00F8 
; 0000 00F9 // ADC initialization
; 0000 00FA // ADC disabled
; 0000 00FB ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00FC 
; 0000 00FD // SPI initialization
; 0000 00FE // SPI disabled
; 0000 00FF SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0100 
; 0000 0101 // TWI initialization
; 0000 0102 // TWI disabled
; 0000 0103 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0104 
; 0000 0105 // Alphanumeric LCD initialization
; 0000 0106 // Connections are specified in the
; 0000 0107 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0108 // RS - PORTA Bit 0
; 0000 0109 // RD - PORTA Bit 1
; 0000 010A // EN - PORTA Bit 2
; 0000 010B // D4 - PORTA Bit 4
; 0000 010C // D5 - PORTA Bit 5
; 0000 010D // D6 - PORTA Bit 6
; 0000 010E // D7 - PORTA Bit 7
; 0000 010F // Characters/line: 8
; 0000 0110 DDRD=0X0F;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0111 PORTD=0XFF;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0112 lcd_init(8);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 0113 while (1)
;PCODE: $0000014D VOL: 0
; 0000 0114       while(1)
;PCODE: $0000014E VOL: 0
; 0000 0115     {
; 0000 0116     start:
;PCODE: $0000014F VOL: 0
; 0000 0117     x=0;
;PCODE: $00000150 VOL: 0
; 0000 0118     ragham=0;
;PCODE: $00000151 VOL: 0
; 0000 0119         do{
;PCODE: $00000152 VOL: 0
; 0000 011A             num1=keypad();
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 011B              }
; 0000 011C         while(ragham!=1);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 011D     lcd_clear();
;PCODE: $0000015D VOL: 0
; 0000 011E     disp(num1,0,0,0);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 011F     x++;
;PCODE: $00000166 VOL: 0
; 0000 0120     k=undefined;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0121         do{
;PCODE: $00000169 VOL: 0
; 0000 0122             keypad();
;PCODE: $0000016A VOL: 0
; 0000 0123             if(k==reset)goto start;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0124             if( k<10)
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0125               {
; 0000 0126               num1*=10;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 0127               num1+=k;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0128               disp(num1,0,0,0);
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0129               x++;
;PCODE: $00000185 VOL: 0
; 0000 012A               k=undefined;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 012B               }
; 0000 012C             }
;PCODE: $00000188 VOL: 0
; 0000 012D         while(k!=11&k!=13&k!=14&k!=15);
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 012E     switch (k)
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 012F     {
; 0000 0130         case 11:lcd_gotoxy(x,0);lcd_putsf("+");z=1; break;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0131         case 13:lcd_gotoxy(x,0);lcd_putsf("-");z=2; break;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 0132         case 14:lcd_gotoxy(x,0);lcd_putsf("*");z=3; break;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0133         case 15:lcd_gotoxy(x,0);lcd_putsf("/");z=4; break;
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 0134     }
;PCODE: $000001D0 VOL: 0
; 0000 0135     ragham=1;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0136     x++;
;PCODE: $000001D3 VOL: 0
; 0000 0137         do{
;PCODE: $000001D4 VOL: 0
; 0000 0138             num2=keypad();
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0139             if(k==reset)goto start;
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 013A             }
;PCODE: $000001DD VOL: 0
; 0000 013B         while(ragham!=2);
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 013C     disp(num2,x,0,0);
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 013D     k=undefined;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 013E     a=x;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 013F         do{
;PCODE: $000001EF VOL: 0
; 0000 0140             keypad();
;PCODE: $000001F0 VOL: 0
; 0000 0141             if(k==reset)goto start;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 0142             if( k<10)
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 0143               {
; 0000 0144               num2*=10;
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 0145               num2+=k;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0146               disp(num2,a,0,0);
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0147               x++;
;PCODE: $0000020A VOL: 0
; 0000 0148               k=undefined;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0149               }
; 0000 014A             }
;PCODE: $0000020D VOL: 0
; 0000 014B         while(k!=12);
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 014C     x++;
;PCODE: $00000214 VOL: 0
; 0000 014D     lcd_gotoxy(x,0);
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 014E     lcd_putsf("=");
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 014F     if(z==1)       pasokh=num1+num2;
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0150     else if(z==2)pasokh=num1-num2;
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 0151     else if(z==3)pasokh=num1*num2;
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 0152     else if(z==4)pasokh=num1/num2;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 0153     disp(pasokh,0,1,3);
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 0154     }
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 0155 }
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
